# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

security:
  encoders:
    # This is the default user class returned from the LDAP provider below
    LdapTools\Bundle\LdapToolsBundle\Security\User\LdapUser: plaintext

  providers:
    ldap:
      id: ldap_tools.security.user.ldap_user_provider
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    login:
      pattern: ^/api/login
      stateless: true
      anonymous: true
      provider: ldap
      json_login:
        check_path: /api/login
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
        require_previous_session: false
      guard:
        authenticators:
          - App\Security\JsonLdapGuardAuthenticator
    refresh:
      pattern: ^/api/token/refresh
      stateless: true
      anonymous: true
    api:
      pattern: ^/api
      stateless: true
      anonymous: true
      provider: ldap
      guard:
        authenticators:
          - lexik_jwt_authentication.jwt_token_authenticator

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    # - { path: ^/admin, roles: ROLE_ADMIN }
    # - { path: ^/profile, roles: ROLE_USER }
    - { path: ^/api/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }

gesdinet_jwt_refresh_token:
  user_provider: security.user.provider.concrete.ldap
