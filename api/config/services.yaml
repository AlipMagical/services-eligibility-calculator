# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: "../src/*"
    exclude: "../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}"

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: "../src/Controller"
    tags: ["controller.service_arguments"]

  # https://github.com/lexik/LexikJWTAuthenticationBundle/blob/master/Resources/doc/2-data-customization.md#eventsjwt_created---adding-custom-data-or-headers-to-the-jwt
  app.event.jwt_authenticated_listener:
    class: App\EventListeners\JWTCreatedListener
    arguments: ["@request_stack"]
    tags:
      - {
          name: kernel.event_listener,
          event: lexik_jwt_authentication.on_jwt_created,
          method: onJWTCreated,
        }

  # https://github.com/TimoBakx/SymfonyTricks/blob/master/security/jwt-ldap.md#using-json_login-instead-of-form_login
  App\Security\JsonLdapGuardAuthenticator:
    arguments:
      - "%security.authentication.hide_user_not_found%"
      - "@ldap_tools.security.user.ldap_user_checker"
      - "@ldap_tools.ldap_manager"
      - "@lexik_jwt_authentication.security.guard.jwt_token_authenticator" # Instead of '@ldap_tools.security.authentication.form_entry_point'
      - "@event_dispatcher"
      - "@lexik_jwt_authentication.handler.authentication_success" # Instead of '@ldap_tools.security.auth_success_handler'
      - "@lexik_jwt_authentication.handler.authentication_failure" # Instead of '@ldap_tools.security.auth_failure_handler'
      - "%ldap_tools.security.guard.options%"
      - "@ldap_tools.security.user.ldap_user_provider"

  #https://api-platform.com/docs/core/serialization/#changing-the-serialization-context-dynamically
  App\Serializer\ServiceContextBuilder:
    decorates: "api_platform.serializer.context_builder"
    arguments: ['@App\Serializer\ServiceContextBuilder.inner']
    autoconfigure: false

  app.event.login_listener:
    class: App\EventListeners\LoginEventListener
    arguments: ["@doctrine.orm.entity_manager"]
    tags:
      - {
          name: kernel.event_listener,
          event: security.interactive_login,
          method: onLoginSuccess,
        }

  app.event.service_change_listener:
    class: App\EventListeners\ServiceChangeListener
    tags:
      # Must have lower priority than the TranslatableListener
      # (must be a listener or a subscriber with priority <-10)
      - { name: doctrine.event_listener, event: onFlush }

  app.event.post_soft_delete_listener:
    class: App\EventListeners\PostSoftDeleteListener
    tags:
      - { name: doctrine.event_listener, event: postSoftDelete }

  app.filter.binary_uuid_filter:
    class: App\Filter\UuidFilter
    tags: ["api_platform.filter"]

  App\DataProviders\ServiceAnalyticsDataProvider:
    calls:
      - [setViewId, ["%env(ANALYTICS_VIEW_ID)%"]]
  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  gedmo.listener.timestampable:
    class: Gedmo\Timestampable\TimestampableListener
    tags:
      - { name: doctrine.event_subscriber, connection: default }

  Gedmo\Translatable\TranslatableListener: "@stof_doctrine_extensions.listener.translatable"
